{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","onChange","e","target","value","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","console","log","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43ce2488.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  audioRef,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setSongInfo,\n  songInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n  const playSongHandler = () => {\n    //console.log(audioRef);\n    //effect\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  //state\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        await setCurrentSong(songs[songs.length - 1]);\n        if (isPlaying) audioRef.current.play();\n        return;\n      }\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n  //add style\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            min={0}\n            max={songInfo.duration}\n            onChange={dragHandler}\n            value={songInfo.currentTime}\n            type=\"range\"\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration || 0) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img alt={currentSong.name} src={currentSong.cover}></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    //console.log(selectedSong);\n    await setCurrentSong(selectedSong[0]);\n    //active state\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    //check song\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            song={song}\n            setCurrentSong={setCurrentSong}\n            songs={songs}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  return (\n    <nav>\n      <h1>Music</h1>\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\n        library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Toofpick\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg\",\n      artist: \"Blue Wednesday, Shopan\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11227\",\n      color: [\"#BC7BA4\", \"#B1A8DB\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Day One\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg\",\n      artist: \"Blue Wednesday, Shopan\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11231\",\n      color: [\"#BC7BA4\", \"#B1A8DB\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Home Court\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg\",\n      artist: \"Blue Wednesday, Shopan\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11233\",\n      color: [\"#BC7BA4\", \"#B1A8DB\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Canary Forest\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#E5B06C\", \"#42D8CB\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Cruisin'\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/8404541e3b694d16fd79433b142ed910f36764dd-1024x1024.jpg\",\n      artist: \"Cloudchord, G Mills\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=8200\",\n      color: [\"#FF9653\", \"#42B3B3\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\n//styles\nimport \"./styles/app.scss\";\n//components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//data\nimport data from \"./data\";\n\nfunction App() {\n  //ref\n  const audioRef = useRef(null);\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calc %\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n    console.log(animation);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration,\n      animationPercentage: animation,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        isPlaying={isPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}